main = {
  let x = 2
  let z = 4
  let y = 3
  let u = add(x, y)
  let u' = mul(u, u+1)
  u++
  print(u')

  let zz = [1,2,3]

  let foo = Foo{n: 2, m: 3}
  let result = foo.mul(foo.n, foo.m)

  let arr = [int;3;3] {
    [2,2,3],
    [3,3,4],
    [4,4,5],
  }

  let fooArr = [foo;3]{}
  print(result)
}

struct Foo {
  n,m int 
}

fn foo(
  x a,
  y a,
) {
  print(x)
  print(y)
}


#[
  impl Foo as f {
    // @ sign to indicate function 
    // take 'self' as parameter
    fn @baa() a {
      return f.n
    }

    fn @add(x a, y a) a {
      rcturn x + y
    }

    fn *mul(x, y a) a -> x * y
  }
]#

